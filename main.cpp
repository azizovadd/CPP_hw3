#include <iostream>


// создать новый файл, куда положим переменные. Добавить название этого файла в строку add executable в файд cmakelists. во втором файле объявить переменные как extern const a
//extern const int a; 
extern const int a,b,c,d;
int main()
{
    /*
    Задание 1 + Задание 3.Написать программу, вычисляющую выражение a * (b + (c / d)) и выводящую результат с плавающей точкой, где a, b, c, d – целочисленные константы;
    Написать программу, вычисляющую выражение из первого задания, а переменные для неё инициализировать в другом файле
    */
    std::cout<<"Задание 1. Пусть а=1, b=2, c=3, d=4. Выражение a*(b+(c/d)) будет равняться:";
    float result = (float)a *((float)b+((float)c/(float)d));
    std::cout<<result<<"\n";
    /*int numbers[]={1,2,3,8,45};
    int* pointer = &numbers[3];
    std::cout<<"\n"<<*pointer<<"\n";
    std::cout<<*(pointer+1);
    */
    /*
    Задание 2. Дано целое число, выведите на экран разницу между этим числом и числом 21. 
    Если же заданное число больше, чем 21, необходимо вывести удвоенную разницу между этим числом и 21. При выполнении задания следует использовать тернарный оператор.
    */
   int number;
   std::cout<< "Введите любое целое число\n";
   std::cin>>number;
   std::cout<<((number>=21)?"Введенное число больше 21, поэтому разницу между ним и 21 мы удволили и получили ":"Введенное число меньше 21, разница между ним и 21 ")<<((number>=21)?(2*(number-21)):(21-number));
    /*
    Задание 4. Описать трёхмерный целочисленный массив, размером 3х3х3, указатель на значения внутри массива 
    и при помощи операции разыменования вывести на экран значение центральной ячейки получившегося куба [1][1][1] 
   
   int massive[3][3][3]={};
   float *massive_pointer1, *massive_pointer2, *massive_pointer3;
   massive_pointer1 = massive[0];
   massive_pointer2 = &massive[0][0];
   massive_pointer3 = &massive[0][0][0]; //на этом моменте зашла в тупик, тк выдается ошибка, но уже времени на решение не оставалось
*/
    return 0;
}